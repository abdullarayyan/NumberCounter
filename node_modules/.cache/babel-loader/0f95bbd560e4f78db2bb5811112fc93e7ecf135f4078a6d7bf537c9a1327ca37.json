{"ast":null,"code":"var _jsxFileName = \"/Users/user/my-ts-react-app/src/NumberCounter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberCounter = ({\n  start,\n  end,\n  duration\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    if (editorRef.current) {\n      const editor = grapesjs.init({\n        container: editorRef.current,\n        fromElement: true,\n        plugins: ['gjs-preset-webpage'],\n        storageManager: false\n      });\n      const counterComponent = editor.DomComponents.addComponent({\n        name: 'NumberCounter',\n        isComponent: el => el.classList && el.classList.contains('number-counter'),\n        model: {\n          defaults: {\n            start,\n            end,\n            duration\n          }\n        },\n        view: {\n          init() {\n            this.listenTo(this.model, 'change:start change:end change:duration', this.updateContent);\n          },\n          updateContent() {\n            const {\n              start,\n              end,\n              duration\n            } = this.model.attributes;\n            const element = this.el;\n            element.innerHTML = start.toString(); // Initial value\n\n            let current = start;\n            const step = (end - start) / (duration / 1000); // Calculate step based on duration\n\n            const intervalId = setInterval(() => {\n              current += step;\n              element.innerHTML = Math.round(current).toString();\n              if (current >= end) {\n                clearInterval(intervalId);\n                element.innerHTML = end.toString(); // Ensure the final value is exact\n              }\n            }, 1000); // Update every second\n          }\n        }\n      });\n\n      editor.setComponents([counterComponent]);\n    }\n  }, [start, end, duration]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n};\n_s(NumberCounter, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = NumberCounter;\nexport default NumberCounter;\nvar _c;\n$RefreshReg$(_c, \"NumberCounter\");","map":{"version":3,"names":["React","useEffect","useRef","grapesjs","jsxDEV","_jsxDEV","NumberCounter","start","end","duration","_s","editorRef","current","editor","init","container","fromElement","plugins","storageManager","counterComponent","DomComponents","addComponent","name","isComponent","el","classList","contains","model","defaults","view","listenTo","updateContent","attributes","element","innerHTML","toString","step","intervalId","setInterval","Math","round","clearInterval","setComponents","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/my-ts-react-app/src/NumberCounter.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\n\ninterface NumberCounterProps {\n  start: number;\n  end: number;\n  duration: number;\n}\n\n\nconst NumberCounter: React.FC<NumberCounterProps> = ({ start, end, duration }) => {\n  const editorRef = useRef<HTMLDivElement | null>(null); \n\n  useEffect(() => {\n    if (editorRef.current) {\n      const editor = grapesjs.init({\n        container: editorRef.current,\n        fromElement: true,\n        plugins: ['gjs-preset-webpage'],\n        storageManager: false,\n      });\n\n      const counterComponent = editor.DomComponents.addComponent({\n        name: 'NumberCounter',\n        isComponent: (el: HTMLElement) => el.classList && el.classList.contains('number-counter'),\n        model: {\n        defaults: {\n          start,\n          end,\n          duration,\n        },\n      },\n      view: {\n        init() {\n          this.listenTo(this.model, 'change:start change:end change:duration', this.updateContent);\n        },\n        updateContent() {\n          const { start, end, duration } = this.model.attributes;\n          const element = this.el;\n          element.innerHTML = start.toString(); // Initial value\n\n          let current = start;\n          const step = (end - start) / (duration / 1000); // Calculate step based on duration\n\n          const intervalId = setInterval(() => {\n            current += step;\n            element.innerHTML = Math.round(current).toString();\n\n            if (current >= end) {\n              clearInterval(intervalId);\n              element.innerHTML = end.toString(); // Ensure the final value is exact\n            }\n          }, 1000); // Update every second\n        },\n      },\n    });\n\n    editor.setComponents([counterComponent]);\n  }}, [start, end, duration]);\n\n  return <div ref={editorRef}></div>;\n};\n\nexport default NumberCounter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1C,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,KAAK;EAAEC,GAAG;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAMC,SAAS,GAAGT,MAAM,CAAwB,IAAI,CAAC;EAErDD,SAAS,CAAC,MAAM;IACd,IAAIU,SAAS,CAACC,OAAO,EAAE;MACrB,MAAMC,MAAM,GAAGV,QAAQ,CAACW,IAAI,CAAC;QAC3BC,SAAS,EAAEJ,SAAS,CAACC,OAAO;QAC5BI,WAAW,EAAE,IAAI;QACjBC,OAAO,EAAE,CAAC,oBAAoB,CAAC;QAC/BC,cAAc,EAAE;MAClB,CAAC,CAAC;MAEF,MAAMC,gBAAgB,GAAGN,MAAM,CAACO,aAAa,CAACC,YAAY,CAAC;QACzDC,IAAI,EAAE,eAAe;QACrBC,WAAW,EAAGC,EAAe,IAAKA,EAAE,CAACC,SAAS,IAAID,EAAE,CAACC,SAAS,CAACC,QAAQ,CAAC,gBAAgB,CAAC;QACzFC,KAAK,EAAE;UACPC,QAAQ,EAAE;YACRrB,KAAK;YACLC,GAAG;YACHC;UACF;QACF,CAAC;QACDoB,IAAI,EAAE;UACJf,IAAIA,CAAA,EAAG;YACL,IAAI,CAACgB,QAAQ,CAAC,IAAI,CAACH,KAAK,EAAE,yCAAyC,EAAE,IAAI,CAACI,aAAa,CAAC;UAC1F,CAAC;UACDA,aAAaA,CAAA,EAAG;YACd,MAAM;cAAExB,KAAK;cAAEC,GAAG;cAAEC;YAAS,CAAC,GAAG,IAAI,CAACkB,KAAK,CAACK,UAAU;YACtD,MAAMC,OAAO,GAAG,IAAI,CAACT,EAAE;YACvBS,OAAO,CAACC,SAAS,GAAG3B,KAAK,CAAC4B,QAAQ,CAAC,CAAC,CAAC,CAAC;;YAEtC,IAAIvB,OAAO,GAAGL,KAAK;YACnB,MAAM6B,IAAI,GAAG,CAAC5B,GAAG,GAAGD,KAAK,KAAKE,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;;YAEhD,MAAM4B,UAAU,GAAGC,WAAW,CAAC,MAAM;cACnC1B,OAAO,IAAIwB,IAAI;cACfH,OAAO,CAACC,SAAS,GAAGK,IAAI,CAACC,KAAK,CAAC5B,OAAO,CAAC,CAACuB,QAAQ,CAAC,CAAC;cAElD,IAAIvB,OAAO,IAAIJ,GAAG,EAAE;gBAClBiC,aAAa,CAACJ,UAAU,CAAC;gBACzBJ,OAAO,CAACC,SAAS,GAAG1B,GAAG,CAAC2B,QAAQ,CAAC,CAAC,CAAC,CAAC;cACtC;YACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;UACZ;QACF;MACF,CAAC,CAAC;;MAEFtB,MAAM,CAAC6B,aAAa,CAAC,CAACvB,gBAAgB,CAAC,CAAC;IAC1C;EAAC,CAAC,EAAE,CAACZ,KAAK,EAAEC,GAAG,EAAEC,QAAQ,CAAC,CAAC;EAE3B,oBAAOJ,OAAA;IAAKsC,GAAG,EAAEhC;EAAU;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACpC,CAAC;AAACrC,EAAA,CAnDIJ,aAA2C;AAAA0C,EAAA,GAA3C1C,aAA2C;AAqDjD,eAAeA,aAAa;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}