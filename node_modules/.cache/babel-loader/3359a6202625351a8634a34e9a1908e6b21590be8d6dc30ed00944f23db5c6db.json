{"ast":null,"code":"var _jsxFileName = \"/Users/user/my-ts-react-app/src/GrapesJSCounter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport grapesjs from 'grapesjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GrapesJSCounter = () => {\n  _s();\n  useEffect(() => {\n    const editor = grapesjs.init({\n      container: '#gjs',\n      components: '<div class=\"counter\">0</div>',\n      style: '.counter { font-size: 24px; }'\n    });\n\n    // Update GrapeJS content when the count changes\n    const updateCounter = count => {\n      const wrapper = editor.DomComponents.getWrapper();\n      const counterComponent = wrapper === null || wrapper === void 0 ? void 0 : wrapper.find('.counter'); // Use nullish coalescing operator\n      if (counterComponent) {\n        counterComponent.setAttributes({\n          'data-count': count\n        });\n        counterComponent.set('content', count.toString());\n      }\n    };\n\n    // Subscribe to count changes\n    // You can replace this with your state management system\n    let count = 0;\n    const interval = setInterval(() => {\n      count++;\n      updateCounter(count);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"GrapeJS Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gjs\",\n      style: {\n        height: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(GrapesJSCounter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GrapesJSCounter;\nexport default GrapesJSCounter;\nvar _c;\n$RefreshReg$(_c, \"GrapesJSCounter\");","map":{"version":3,"names":["React","useEffect","grapesjs","jsxDEV","_jsxDEV","GrapesJSCounter","_s","editor","init","container","components","style","updateCounter","count","wrapper","DomComponents","getWrapper","counterComponent","find","setAttributes","set","toString","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","id","height","_c","$RefreshReg$"],"sources":["/Users/user/my-ts-react-app/src/GrapesJSCounter.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport grapesjs from 'grapesjs';\n\nconst GrapesJSCounter: React.FC = () => {\n  useEffect(() => {\n    const editor = grapesjs.init({\n      container: '#gjs',\n      components: '<div class=\"counter\">0</div>',\n      style: '.counter { font-size: 24px; }',\n    });\n\n    // Update GrapeJS content when the count changes\n    const updateCounter = (count: number) => {\n      const wrapper = editor.DomComponents.getWrapper();\n      const counterComponent = wrapper?.find('.counter'); // Use nullish coalescing operator\n      if (counterComponent) {\n        counterComponent.setAttributes({ 'data-count': count });\n        counterComponent.set('content', count.toString());\n      }\n    };\n\n    // Subscribe to count changes\n    // You can replace this with your state management system\n    let count = 0;\n    const interval = setInterval(() => {\n      count++;\n      updateCounter(count);\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <div>\n      <h2>GrapeJS Counter</h2>\n      <div id=\"gjs\" style={{ height: '200px' }} />\n    </div>\n  );\n};\n\nexport default GrapesJSCounter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtCL,SAAS,CAAC,MAAM;IACd,MAAMM,MAAM,GAAGL,QAAQ,CAACM,IAAI,CAAC;MAC3BC,SAAS,EAAE,MAAM;MACjBC,UAAU,EAAE,8BAA8B;MAC1CC,KAAK,EAAE;IACT,CAAC,CAAC;;IAEF;IACA,MAAMC,aAAa,GAAIC,KAAa,IAAK;MACvC,MAAMC,OAAO,GAAGP,MAAM,CAACQ,aAAa,CAACC,UAAU,CAAC,CAAC;MACjD,MAAMC,gBAAgB,GAAGH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;MACpD,IAAID,gBAAgB,EAAE;QACpBA,gBAAgB,CAACE,aAAa,CAAC;UAAE,YAAY,EAAEN;QAAM,CAAC,CAAC;QACvDI,gBAAgB,CAACG,GAAG,CAAC,SAAS,EAAEP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;MACnD;IACF,CAAC;;IAED;IACA;IACA,IAAIR,KAAK,GAAG,CAAC;IACb,MAAMS,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCV,KAAK,EAAE;MACPD,aAAa,CAACC,KAAK,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXW,aAAa,CAACF,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBzB,OAAA;MAAK0B,EAAE,EAAC,KAAK;MAACnB,KAAK,EAAE;QAAEoB,MAAM,EAAE;MAAQ;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAACvB,EAAA,CArCID,eAAyB;AAAA2B,EAAA,GAAzB3B,eAAyB;AAuC/B,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}