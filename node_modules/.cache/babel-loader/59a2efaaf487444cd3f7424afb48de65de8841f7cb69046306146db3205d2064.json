{"ast":null,"code":"var _jsxFileName = \"/Users/user/my-ts-react-app/src/GrapeJSEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberCounter = ({\n  start,\n  end,\n  duration\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    const editor = grapesjs.init({\n      container: editorRef.current,\n      fromElement: true,\n      plugins: ['gjs-preset-webpage'],\n      storageManager: false\n    });\n    const counterComponent = editor.DomComponents.addComponent({\n      name: 'NumberCounter',\n      isComponent: el => el.classList && el.classList.contains('number-counter'),\n      model: {\n        defaults: {\n          start,\n          end,\n          duration\n        }\n      },\n      view: {\n        init() {\n          this.listenTo(this.model, 'change:start change:end change:duration', this.updateContent);\n        },\n        updateContent() {\n          const {\n            start,\n            end,\n            duration\n          } = this.model.attributes;\n          const element = this.el;\n          element.innerHTML = start.toString(); // Initial value\n\n          let current = start;\n          const step = (end - start) / (duration / 1000); // Calculate step based on duration\n\n          const intervalId = setInterval(() => {\n            current += step;\n            element.innerHTML = Math.round(current).toString();\n            if (current >= end) {\n              clearInterval(intervalId);\n              element.innerHTML = end.toString(); // Ensure the final value is exact\n            }\n          }, 1000); // Update every second\n        }\n      }\n    });\n\n    editor.setComponents([counterComponent]);\n  }, [start, end, duration]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n};\n_s(NumberCounter, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = NumberCounter;\nexport default NumberCounter;\nvar _c;\n$RefreshReg$(_c, \"NumberCounter\");","map":{"version":3,"names":["React","useEffect","useRef","grapesjs","jsxDEV","_jsxDEV","NumberCounter","start","end","duration","_s","editorRef","editor","init","container","current","fromElement","plugins","storageManager","counterComponent","DomComponents","addComponent","name","isComponent","el","classList","contains","model","defaults","view","listenTo","updateContent","attributes","element","innerHTML","toString","step","intervalId","setInterval","Math","round","clearInterval","setComponents","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/my-ts-react-app/src/GrapeJSEditor.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\n\ninterface NumberCounterProps {\n  start: number;\n  end: number;\n  duration: number;\n}\n\nconst NumberCounter: React.FC<NumberCounterProps> = ({ start, end, duration }) => {\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    const editor = grapesjs.init({\n      container: editorRef.current,\n      fromElement: true,\n      plugins: ['gjs-preset-webpage'],\n      storageManager: false,\n    });\n\n    const counterComponent = editor.DomComponents.addComponent({\n      name: 'NumberCounter',\n      isComponent: el => el.classList && el.classList.contains('number-counter'),\n      model: {\n        defaults: {\n          start,\n          end,\n          duration,\n        },\n      },\n      view: {\n        init() {\n          this.listenTo(this.model, 'change:start change:end change:duration', this.updateContent);\n        },\n        updateContent() {\n          const { start, end, duration } = this.model.attributes;\n          const element = this.el;\n          element.innerHTML = start.toString(); // Initial value\n\n          let current = start;\n          const step = (end - start) / (duration / 1000); // Calculate step based on duration\n\n          const intervalId = setInterval(() => {\n            current += step;\n            element.innerHTML = Math.round(current).toString();\n\n            if (current >= end) {\n              clearInterval(intervalId);\n              element.innerHTML = end.toString(); // Ensure the final value is exact\n            }\n          }, 1000); // Update every second\n        },\n      },\n    });\n\n    editor.setComponents([counterComponent]);\n  }, [start, end, duration]);\n\n  return <div ref={editorRef}></div>;\n};\n\nexport default NumberCounter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1C,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,KAAK;EAAEC,GAAG;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAGT,QAAQ,CAACU,IAAI,CAAC;MAC3BC,SAAS,EAAEH,SAAS,CAACI,OAAO;MAC5BC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE,CAAC,oBAAoB,CAAC;MAC/BC,cAAc,EAAE;IAClB,CAAC,CAAC;IAEF,MAAMC,gBAAgB,GAAGP,MAAM,CAACQ,aAAa,CAACC,YAAY,CAAC;MACzDC,IAAI,EAAE,eAAe;MACrBC,WAAW,EAAEC,EAAE,IAAIA,EAAE,CAACC,SAAS,IAAID,EAAE,CAACC,SAAS,CAACC,QAAQ,CAAC,gBAAgB,CAAC;MAC1EC,KAAK,EAAE;QACLC,QAAQ,EAAE;UACRrB,KAAK;UACLC,GAAG;UACHC;QACF;MACF,CAAC;MACDoB,IAAI,EAAE;QACJhB,IAAIA,CAAA,EAAG;UACL,IAAI,CAACiB,QAAQ,CAAC,IAAI,CAACH,KAAK,EAAE,yCAAyC,EAAE,IAAI,CAACI,aAAa,CAAC;QAC1F,CAAC;QACDA,aAAaA,CAAA,EAAG;UACd,MAAM;YAAExB,KAAK;YAAEC,GAAG;YAAEC;UAAS,CAAC,GAAG,IAAI,CAACkB,KAAK,CAACK,UAAU;UACtD,MAAMC,OAAO,GAAG,IAAI,CAACT,EAAE;UACvBS,OAAO,CAACC,SAAS,GAAG3B,KAAK,CAAC4B,QAAQ,CAAC,CAAC,CAAC,CAAC;;UAEtC,IAAIpB,OAAO,GAAGR,KAAK;UACnB,MAAM6B,IAAI,GAAG,CAAC5B,GAAG,GAAGD,KAAK,KAAKE,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;;UAEhD,MAAM4B,UAAU,GAAGC,WAAW,CAAC,MAAM;YACnCvB,OAAO,IAAIqB,IAAI;YACfH,OAAO,CAACC,SAAS,GAAGK,IAAI,CAACC,KAAK,CAACzB,OAAO,CAAC,CAACoB,QAAQ,CAAC,CAAC;YAElD,IAAIpB,OAAO,IAAIP,GAAG,EAAE;cAClBiC,aAAa,CAACJ,UAAU,CAAC;cACzBJ,OAAO,CAACC,SAAS,GAAG1B,GAAG,CAAC2B,QAAQ,CAAC,CAAC,CAAC,CAAC;YACtC;UACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;QACZ;MACF;IACF,CAAC,CAAC;;IAEFvB,MAAM,CAAC8B,aAAa,CAAC,CAACvB,gBAAgB,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACZ,KAAK,EAAEC,GAAG,EAAEC,QAAQ,CAAC,CAAC;EAE1B,oBAAOJ,OAAA;IAAKsC,GAAG,EAAEhC;EAAU;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACpC,CAAC;AAACrC,EAAA,CAlDIJ,aAA2C;AAAA0C,EAAA,GAA3C1C,aAA2C;AAoDjD,eAAeA,aAAa;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}